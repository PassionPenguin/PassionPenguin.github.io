{
  "title": "Android Studio首次运行创建项目及简介",
  "author": "@PassionPenguin",
  "postTime": "1584672329394",
  "imgSrc": "FirstRun-Introducation.png",
  "imgDescription": "Android Studio首次运行创建项目及简介Banner图",
  "content": [
    {
      "innerHTML": "在上一章我们简要介绍了如何安装并配置Android Studio，您已经在您的开发环境中设置了AS，现在让我们了解这款IDE的用户界面等信息吧。"
    },
    {
      "type": "subtitle",
      "innerHTML": "首次进入自执行 Gradle Setup",
      "id": "SetupGradle"
    },
    {
      "innerHTML": "首次进入Android Studio并打开一个新的项目，您将需要下载Gradle及其相关组件。这个过程取决于您的网络连接速度，在大多数情况下是很快的，鄙人前两次花了2分钟，到截图的这一次却花了20多分钟，完全取决于互联网的当前接入速度。"
    },
    {
      "innerHTML": "首先我们来创建一个项目，这个是打开AS的第一个用户界面："
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/EnterInterface.png",
      "imgDescription": "EnterInterface"
    },
    {
      "innerHTML": "会出现如此的窗口，拖动找到EmptyActivity："
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/SelectProjectTemplate.png",
      "imgDescription": "EnterInterface"
    },
    {
      "innerHTML": "继续点击Next，到配置应用元数据的界面："
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/ConfigureProject.png",
      "imgDescription": "ConfigureProject"
    },
    {
      "innerHTML": "Name写应用名称，Package name写包名，通常是域名+公司/组织/个人名称+应用名，Save Location写项目保存的地址，Language写语言，为Java/Kotlin，Bytecode Level写编译功能性（越高编译慢，越低少功能），Minimum SDK选择最低支持的Android系统版本，Help Me Choose里面有用户版本分布图可供查看："
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/SDKGraph.png",
      "imgDescription": "SDKGraph"
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/Gradle-Build-Dialog.png",
      "imgDescription": "Gradle Build Dialog"
    },
    {
      "innerHTML": "Gradle是一个基于Apache Ant和Apache Maven概念的项目自动化建构工具。Gradle 构建脚本使用的是 Groovy 或 Kotlin 的特定领域语言来编写的，而不是传统的XML。<br>当前官方支持的语言为Java、Groovy、Scala、C++、Swift、JavaScript等语言以及Spring框架。"
    },
    {
      "innerHTML": "过去 Java 开发者常用 Maven 和 Ant 等工具进行封装布署的自动化，或是两者兼用，不过这两个包彼此有优缺点，如果频繁改变相依包版本，使用 Ant 相当麻烦，如果琐碎工作很多，Maven 功能不足，而且两者都使用 XML 描述，相当不利于设计 if、switch 等判断式，即使写了可读性也不佳，而 Gradle 改良了过去 Maven、Ant 带给开发者的问题，至今也成为 Android Studio 内置的封装布署工具。"
    },
    {
      "innerHTML": "喝杯茶动一动做点东西吃，回来就安装设置完成了相关组件："
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/ConfiureSuccessful.png",
      "imgDescription": "Gradle ConfiureSuccessful"
    },
    {
      "innerHTML": "如下图所示，我们看到的就是Android Studio的基础界面，首先我们来介绍一下文件管理界面。"
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/explorer.png",
      "imgDescription": "files explorer"
    },
    {
      "type": "subtitle",
      "innerHTML": "文件管理器",
      "id": "FileExplorer"
    },
    {
      "innerHTML": "一般来说，大家所看到的文件管理界面是Gradle Build完成以后分门别类排序好了的文件夹，一般分为app（下面包涵manifests、java、res）、Gradle Scripts两部分。"
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/AndroidFiles.png",
      "imgDescription": "AndroidFiles"
    },
    {
      "innerHTML": "如果大家点击顶部右侧的倒三角，会出现如此的一个选单，切换选单，内容分别为："
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/ChangeStructure.png",
      "imgDescription": "ChangeStructure"
    },
    {
      "innerHTML": "<b>Project<b><br>显示整个项目的文件，按照实际文件排序方法："
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/Project.png",
      "imgDescription": "Project"
    },
    {
      "innerHTML": "<b>Packages<b><br>显示整个项目的包，例如Java包，例如各类图片mipmap，各类数值："
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/PackagesFiles.png",
      "imgDescription": "PackagesFiles"
    },
    {
      "innerHTML": "<b>Production<b><br>显示正式产品的文件，按照实际文件排序方法，不包括Tests部分的文件："
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/ProductionFiles.png",
      "imgDescription": "ProductionFiles"
    },
    {
      "innerHTML": "<b>Tests<b><br>显示测试的文件，按照实际文件排序方法，不包括Producition部分的文件："
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/TestsFiles.png",
      "imgDescription": "TestsFiles"
    },
    {
      "innerHTML": "<b>Production Source Files<b><br>显示项目的源文件，按照实际文件排序方法，不包括诸如APK生成、Gradle数据："
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/ProjectSrcFiles.png",
      "imgDescription": "ProjectSrcFiles"
    },
    {
      "innerHTML": "<b>Production Non Source Files<b><br>显示不属于项目的源文件，按照实际文件排序方法，诸如APK生成、Gradle数据："
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/ProjectNonSrcFiles.png",
      "imgDescription": "ProjectNonSrcFiles"
    },
    {
      "innerHTML": "<b>Problems<b><br>显示问题界面，包括所有Insepctro发现语法等出错、提醒的文件："
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/Problems.png",
      "imgDescription": "Problems"
    },
    {
      "innerHTML": "<b>Open Files<b><br>显示当前所打开的所有文件的归属，按照实际文件排序方法："
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/OpenFiles.png",
      "imgDescription": "OpenFiles"
    },
    {
      "innerHTML": "<b>Android<b><br>这个就是最常见的也是默认的，在上面已经解释了（一般来说，大家所看到的文件管理界面是Gradle Build完成以后分门别类排序好了的文件夹，一般分为app（下面包涵manifests、java、res）、Gradle Scripts两部分。）："
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/AndroidFiles.png",
      "imgDescription": "AndroidFiles"
    },
    {
      "type": "subtitle",
      "innerHTML": "代码/设计界面介绍",
      "id": "Coding-Design-Interface"
    },
    {
      "innerHTML": "接下来，我们来介绍一下代码和设计界面，他一般处于窗口的最中央。"
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/CodingInterface.png",
      "imgDescription": "CodingInterface"
    },
    {
      "innerHTML": "里面的内容基本分了几部分，XMLLayout布局，其中XMLLayout布局又分为三种：Code Only、Split、Design：<br><b>Code Only 直接编写代码</b><br>一般来说，对于我这种习惯了HTML的人，选择Code Only的方式直接编写XML语法的代码，自带上色和提示等："
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/CodeOnly-Design-Panel.png",
      "imgDescription": "CodeOnly"
    },
    {
      "innerHTML": "<b>Split Mode 混合模式</b><br>除非性能好，渲染快，不然基本上和Dreamweaver一样的两不好，除非屏幕够大，否则输入XML太卡，拖动控件控件界面又太小"
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/SplitDesignPanel.png",
      "imgDescription": "SplitDesignPanel"
    },
    {
      "innerHTML": "<b>Design Only 控件界面</b><br>这个界面适合快速拖动控件并定位，适合快速添加Attributs："
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/Design-Panel.png",
      "imgDescription": "CodingInterface"
    },
    {
      "innerHTML": "<b>Design Only 控件界面</b><br>这个界面适合快速拖动控件并定位，适合快速添加Attributs："
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/Design-Panel.png",
      "imgDescription": "CodingInterface"
    },
    {
      "innerHTML": "以上的所有功能您都能够在XML Layout文件的右上角找到切换，注意到，将指针悬浮到标签上会有不同的提示："
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/DifferentMode.png",
      "imgDescription": "DifferentMode"
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/Design-Panel.png",
      "imgDescription": "CodingInterface"
    },
    {
      "innerHTML": "然后是Java/Kotlin代码窗口，如图："
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/CodingInterface.png",
      "imgDescription": "CodingInterface"
    },
    {
      "type": "toolbar",
      "innerHTML": "快捷操作",
      "id": "Toolbar"
    },
    {
      "innerHTML": "让我们一起了解一下Android Studio里面存在的Toolbar吧，在主窗口的四周围绕着一圈Toolbar，方便大家进行窗口和动作的快捷操作："
    },
    {
      "innerHTML": "<b>上 - 左侧</b><br>指示当前打开的这个文件的所属"
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/TopLeftToolBar.png",
      "imgDescription": "TopRightToolBar"
    },
    {
      "innerHTML": "<b>上 - 右侧</b>一般包括运行项目（debug、run、pause、profiler等）、AVD、SDK、Gradle、Structure，如果开启了VCS版本控制，会有VCS相关的按钮。"
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/TopRightToolBar.png",
      "imgDescription": "TopRightToolBar"
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/TopLeftToolBar.png",
      "imgDescription": "TopRightToolBar"
    },
    {
      "innerHTML": "<b>右 - 上侧</b>包括了Gradle、助手、多设备布局兼容性。"
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/RightTopToolBar.png",
      "imgDescription": "RightTopToolBar"
    },
    {
      "innerHTML": "<b>右 - 下侧</b>仅有的Device File Explorer（管理接入设备的文件，可查看属于当前项目的文件夹内容（包括私有目录））。"
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/RightBottomToolBar.png",
      "imgDescription": "RightBottomToolBar"
    },
    {
      "innerHTML": "<b>下 - 右侧</b>包括LayoutInspector和实时记录（例如Gradle Build、错误记录、Make Project之类的操作）。"
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/BottomRightToolBar.png",
      "imgDescription": "BottomRightToolBar"
    },
    {
      "innerHTML": "<b>下 - 左侧</b>包括了Terminal（系统级别的，例如zsh、sh、bash、cmd）、Build（记录）、Logcat（日志）、TODO、Debug、Profiler等。"
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/BottomLeftToolBar.png",
      "imgDescription": "BottomRightToolBar"
    },
    {
      "innerHTML": "<b>左 - 下侧</b>包括了Structure、Build Variants、Favourite三个快捷按钮。"
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/LeftBottomToolBar.png",
      "imgDescription": "LeftBottomToolBar"
    },
    {
      "innerHTML": "<b>左 - 上侧</b>包括了资源管理（例如drawable mipmap color layout string navigation等）、Project（总的文件浏览器）。"
    },
    {
      "type": "img",
      "imgSrc": "FirstRun-Introducation/LeftTopToolBar.png",
      "imgDescription": "LeftTopToolBar"
    }
  ]
}